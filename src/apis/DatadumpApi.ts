/* tslint:disable */
/* eslint-disable */
/**
 * The Span API
 * API for device, collection, output and firmware management
 *
 * The version of the OpenAPI document: 4.1.7 only-deshaun
 * Contact: dev@lab5e.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    DataDumpResponse,
    DataDumpResponseFromJSON,
    DataDumpResponseToJSON,
    RpcStatus,
    RpcStatusFromJSON,
    RpcStatusToJSON,
} from '../models';

export interface SpanDataDumpRequest {
    body: object;
}

/**
 * 
 */
export class DatadumpApi extends runtime.BaseAPI {

    /**
     * Do a complete data dump of your data, devices, outputs and collections.
     * Data dump
     */
    async spanDataDumpRaw(requestParameters: SpanDataDumpRequest): Promise<runtime.ApiResponse<DataDumpResponse>> {
        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling spanDataDump.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["X-API-Token"] = this.configuration.apiKey("X-API-Token"); // APIToken authentication
        }

        const response = await this.request({
            path: `/datadump`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.body as any,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => DataDumpResponseFromJSON(jsonValue));
    }

    /**
     * Do a complete data dump of your data, devices, outputs and collections.
     * Data dump
     */
    async spanDataDump(requestParameters: SpanDataDumpRequest): Promise<DataDumpResponse> {
        const response = await this.spanDataDumpRaw(requestParameters);
        return await response.value();
    }

}
