/* tslint:disable */
/* eslint-disable */
/**
 * The Span API
 * API for device, collection, output and firmware management
 *
 * The version of the OpenAPI document: 4.2.4 curable-andres
 * Contact: dev@lab5e.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * This is the request object when updating the firmware image
 * @export
 * @interface UpdateFirmwareRequest
 */
export interface UpdateFirmwareRequest {
    /**
     * 
     * @type {string}
     * @memberof UpdateFirmwareRequest
     */
    collectionId?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateFirmwareRequest
     */
    version?: string;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof UpdateFirmwareRequest
     */
    tags?: { [key: string]: string; };
}

export function UpdateFirmwareRequestFromJSON(json: any): UpdateFirmwareRequest {
    return UpdateFirmwareRequestFromJSONTyped(json, false);
}

export function UpdateFirmwareRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateFirmwareRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'collectionId': !exists(json, 'collectionId') ? undefined : json['collectionId'],
        'version': !exists(json, 'version') ? undefined : json['version'],
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
    };
}

export function UpdateFirmwareRequestToJSON(value?: UpdateFirmwareRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'collectionId': value.collectionId,
        'version': value.version,
        'tags': value.tags,
    };
}


