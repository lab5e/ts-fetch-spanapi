/* tslint:disable */
/* eslint-disable */
/**
 * The Span API
 * API for device, collection, output and firmware management
 *
 * The version of the OpenAPI document: 4.1.7 only-deshaun
 * Contact: dev@lab5e.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SendMessageRequest
 */
export interface SendMessageRequest {
    /**
     * 
     * @type {string}
     * @memberof SendMessageRequest
     */
    collectionId?: string;
    /**
     * 
     * @type {string}
     * @memberof SendMessageRequest
     */
    deviceId?: string;
    /**
     * 
     * @type {number}
     * @memberof SendMessageRequest
     */
    port?: number;
    /**
     * 
     * @type {string}
     * @memberof SendMessageRequest
     */
    payload?: string;
    /**
     * Valid transports are "udp", "coap", "coap-pull", "udp-pull", "coap-push",
     * "udp-push".
     * "udp" is equivalent to "udp-push" and "coap" is equivalent to "coap-push".
     * Push messages are sent unsolicited to the device wheil pull messages are
     * sent whenever the device wither sends data upstream (for UDP) or does a
     * CoAP request to the CoAP service in span.
     * @type {string}
     * @memberof SendMessageRequest
     */
    transport?: string;
    /**
     * 
     * @type {string}
     * @memberof SendMessageRequest
     */
    coapPath?: string;
}

export function SendMessageRequestFromJSON(json: any): SendMessageRequest {
    return SendMessageRequestFromJSONTyped(json, false);
}

export function SendMessageRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SendMessageRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'collectionId': !exists(json, 'collectionId') ? undefined : json['collectionId'],
        'deviceId': !exists(json, 'deviceId') ? undefined : json['deviceId'],
        'port': !exists(json, 'port') ? undefined : json['port'],
        'payload': !exists(json, 'payload') ? undefined : json['payload'],
        'transport': !exists(json, 'transport') ? undefined : json['transport'],
        'coapPath': !exists(json, 'coapPath') ? undefined : json['coapPath'],
    };
}

export function SendMessageRequestToJSON(value?: SendMessageRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'collectionId': value.collectionId,
        'deviceId': value.deviceId,
        'port': value.port,
        'payload': value.payload,
        'transport': value.transport,
        'coapPath': value.coapPath,
    };
}


