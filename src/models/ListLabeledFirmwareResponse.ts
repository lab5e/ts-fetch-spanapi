/* tslint:disable */
/* eslint-disable */
/**
 * The Span API
 * API for device, collection, output and firmware management
 *
 * The version of the OpenAPI document: 5.0.4 pettish-alleen
 * Contact: dev@lab5e.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { LabeledFirmware } from './LabeledFirmware';
import {
    LabeledFirmwareFromJSON,
    LabeledFirmwareFromJSONTyped,
    LabeledFirmwareToJSON,
} from './LabeledFirmware';

/**
 * Response object for listing firmware images
 * @export
 * @interface ListLabeledFirmwareResponse
 */
export interface ListLabeledFirmwareResponse {
    /**
     * 
     * @type {Array<LabeledFirmware>}
     * @memberof ListLabeledFirmwareResponse
     */
    images?: Array<LabeledFirmware>;
}

/**
 * Check if a given object implements the ListLabeledFirmwareResponse interface.
 */
export function instanceOfListLabeledFirmwareResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ListLabeledFirmwareResponseFromJSON(json: any): ListLabeledFirmwareResponse {
    return ListLabeledFirmwareResponseFromJSONTyped(json, false);
}

export function ListLabeledFirmwareResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListLabeledFirmwareResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'images': !exists(json, 'images') ? undefined : ((json['images'] as Array<any>).map(LabeledFirmwareFromJSON)),
    };
}

export function ListLabeledFirmwareResponseToJSON(value?: ListLabeledFirmwareResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'images': value.images === undefined ? undefined : ((value.images as Array<any>).map(LabeledFirmwareToJSON)),
    };
}

