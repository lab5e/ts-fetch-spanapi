/* tslint:disable */
/* eslint-disable */
/**
 * The Span API
 * API for device, collection, output and firmware management
 *
 * The version of the OpenAPI document: 5.0.2 subversive-jamila
 * Contact: dev@lab5e.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CertificateInfo } from './CertificateInfo';
import {
    CertificateInfoFromJSON,
    CertificateInfoFromJSONTyped,
    CertificateInfoToJSON,
} from './CertificateInfo';

/**
 * 
 * @export
 * @interface GatewayCertificateResponse
 */
export interface GatewayCertificateResponse {
    /**
     * 
     * @type {Array<CertificateInfo>}
     * @memberof GatewayCertificateResponse
     */
    certificates?: Array<CertificateInfo>;
}

/**
 * Check if a given object implements the GatewayCertificateResponse interface.
 */
export function instanceOfGatewayCertificateResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GatewayCertificateResponseFromJSON(json: any): GatewayCertificateResponse {
    return GatewayCertificateResponseFromJSONTyped(json, false);
}

export function GatewayCertificateResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GatewayCertificateResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'certificates': !exists(json, 'certificates') ? undefined : ((json['certificates'] as Array<any>).map(CertificateInfoFromJSON)),
    };
}

export function GatewayCertificateResponseToJSON(value?: GatewayCertificateResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'certificates': value.certificates === undefined ? undefined : ((value.certificates as Array<any>).map(CertificateInfoToJSON)),
    };
}

