/* tslint:disable */
/* eslint-disable */
/**
 * The Span API
 * API for device, collection, output and firmware management
 *
 * The version of the OpenAPI document: 5.0.5 contented-jamila
 * Contact: dev@lab5e.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { LabeledFirmware } from './LabeledFirmware';
import {
    LabeledFirmwareFromJSON,
    LabeledFirmwareFromJSONTyped,
    LabeledFirmwareToJSON,
} from './LabeledFirmware';

/**
 * Response object when creating a labeled firmware image
 * @export
 * @interface CreateLabeledFirmwareResponse
 */
export interface CreateLabeledFirmwareResponse {
    /**
     * 
     * @type {LabeledFirmware}
     * @memberof CreateLabeledFirmwareResponse
     */
    image?: LabeledFirmware;
}

/**
 * Check if a given object implements the CreateLabeledFirmwareResponse interface.
 */
export function instanceOfCreateLabeledFirmwareResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CreateLabeledFirmwareResponseFromJSON(json: any): CreateLabeledFirmwareResponse {
    return CreateLabeledFirmwareResponseFromJSONTyped(json, false);
}

export function CreateLabeledFirmwareResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateLabeledFirmwareResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'image': !exists(json, 'image') ? undefined : LabeledFirmwareFromJSON(json['image']),
    };
}

export function CreateLabeledFirmwareResponseToJSON(value?: CreateLabeledFirmwareResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'image': LabeledFirmwareToJSON(value.image),
    };
}

