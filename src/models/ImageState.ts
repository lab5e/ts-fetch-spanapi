/* tslint:disable */
/* eslint-disable */
/**
 * The Span API
 * API for device, collection, output and firmware management
 *
 * The version of the OpenAPI document: 5.0.5 contented-jamila
 * Contact: dev@lab5e.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * State for a single image on a device
 * @export
 * @interface ImageState
 */
export interface ImageState {
    /**
     * 
     * @type {string}
     * @memberof ImageState
     */
    collectionId?: string;
    /**
     * 
     * @type {string}
     * @memberof ImageState
     */
    deviceId?: string;
    /**
     * 
     * @type {string}
     * @memberof ImageState
     */
    imageId?: string;
    /**
     * 
     * @type {string}
     * @memberof ImageState
     */
    updated?: string;
    /**
     * 
     * @type {string}
     * @memberof ImageState
     */
    state?: string;
    /**
     * 
     * @type {string}
     * @memberof ImageState
     */
    message?: string;
}

/**
 * Check if a given object implements the ImageState interface.
 */
export function instanceOfImageState(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ImageStateFromJSON(json: any): ImageState {
    return ImageStateFromJSONTyped(json, false);
}

export function ImageStateFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImageState {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'collectionId': !exists(json, 'collectionId') ? undefined : json['collectionId'],
        'deviceId': !exists(json, 'deviceId') ? undefined : json['deviceId'],
        'imageId': !exists(json, 'imageId') ? undefined : json['imageId'],
        'updated': !exists(json, 'updated') ? undefined : json['updated'],
        'state': !exists(json, 'state') ? undefined : json['state'],
        'message': !exists(json, 'message') ? undefined : json['message'],
    };
}

export function ImageStateToJSON(value?: ImageState | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'collectionId': value.collectionId,
        'deviceId': value.deviceId,
        'imageId': value.imageId,
        'updated': value.updated,
        'state': value.state,
        'message': value.message,
    };
}

