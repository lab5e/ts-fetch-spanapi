/* tslint:disable */
/* eslint-disable */
/**
 * The Span API
 * API for device, collection, output and firmware management
 *
 * The version of the OpenAPI document: 5.0.5 contented-jamila
 * Contact: dev@lab5e.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ImageState } from './ImageState';
import {
    ImageStateFromJSON,
    ImageStateFromJSONTyped,
    ImageStateToJSON,
} from './ImageState';

/**
 * Image state for a single device
 * @export
 * @interface DeviceImageState
 */
export interface DeviceImageState {
    /**
     * 
     * @type {Array<ImageState>}
     * @memberof DeviceImageState
     */
    state?: Array<ImageState>;
}

/**
 * Check if a given object implements the DeviceImageState interface.
 */
export function instanceOfDeviceImageState(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DeviceImageStateFromJSON(json: any): DeviceImageState {
    return DeviceImageStateFromJSONTyped(json, false);
}

export function DeviceImageStateFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeviceImageState {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'state': !exists(json, 'state') ? undefined : ((json['state'] as Array<any>).map(ImageStateFromJSON)),
    };
}

export function DeviceImageStateToJSON(value?: DeviceImageState | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'state': value.state === undefined ? undefined : ((value.state as Array<any>).map(ImageStateToJSON)),
    };
}

