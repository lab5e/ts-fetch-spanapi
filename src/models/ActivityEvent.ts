/* tslint:disable */
/* eslint-disable */
/**
 * The Span API
 * API for device, collection, output and firmware management
 *
 * The version of the OpenAPI document: 5.0.4 pettish-alleen
 * Contact: dev@lab5e.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ActivityEvent
 */
export interface ActivityEvent {
    /**
     * 
     * @type {string}
     * @memberof ActivityEvent
     */
    event?: string;
    /**
     * 
     * @type {string}
     * @memberof ActivityEvent
     */
    time?: string;
    /**
     * 
     * @type {string}
     * @memberof ActivityEvent
     */
    collectionId?: string;
    /**
     * 
     * @type {string}
     * @memberof ActivityEvent
     */
    deviceId?: string;
    /**
     * 
     * @type {string}
     * @memberof ActivityEvent
     */
    gatewayId?: string;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof ActivityEvent
     */
    data?: { [key: string]: string; };
}

/**
 * Check if a given object implements the ActivityEvent interface.
 */
export function instanceOfActivityEvent(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ActivityEventFromJSON(json: any): ActivityEvent {
    return ActivityEventFromJSONTyped(json, false);
}

export function ActivityEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): ActivityEvent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'event': !exists(json, 'event') ? undefined : json['event'],
        'time': !exists(json, 'time') ? undefined : json['time'],
        'collectionId': !exists(json, 'collectionId') ? undefined : json['collectionId'],
        'deviceId': !exists(json, 'deviceId') ? undefined : json['deviceId'],
        'gatewayId': !exists(json, 'gatewayId') ? undefined : json['gatewayId'],
        'data': !exists(json, 'data') ? undefined : json['data'],
    };
}

export function ActivityEventToJSON(value?: ActivityEvent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'event': value.event,
        'time': value.time,
        'collectionId': value.collectionId,
        'deviceId': value.deviceId,
        'gatewayId': value.gatewayId,
        'data': value.data,
    };
}

