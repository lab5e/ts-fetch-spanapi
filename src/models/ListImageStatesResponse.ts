/* tslint:disable */
/* eslint-disable */
/**
 * The Span API
 * API for device, collection, output and firmware management
 *
 * The version of the OpenAPI document: 5.0.5 contented-jamila
 * Contact: dev@lab5e.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DeviceImageState } from './DeviceImageState';
import {
    DeviceImageStateFromJSON,
    DeviceImageStateFromJSONTyped,
    DeviceImageStateToJSON,
} from './DeviceImageState';

/**
 * Response object when retrieving image states for a collection
 * @export
 * @interface ListImageStatesResponse
 */
export interface ListImageStatesResponse {
    /**
     * 
     * @type {Array<DeviceImageState>}
     * @memberof ListImageStatesResponse
     */
    states?: Array<DeviceImageState>;
}

/**
 * Check if a given object implements the ListImageStatesResponse interface.
 */
export function instanceOfListImageStatesResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ListImageStatesResponseFromJSON(json: any): ListImageStatesResponse {
    return ListImageStatesResponseFromJSONTyped(json, false);
}

export function ListImageStatesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListImageStatesResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'states': !exists(json, 'states') ? undefined : ((json['states'] as Array<any>).map(DeviceImageStateFromJSON)),
    };
}

export function ListImageStatesResponseToJSON(value?: ListImageStatesResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'states': value.states === undefined ? undefined : ((value.states as Array<any>).map(DeviceImageStateToJSON)),
    };
}

