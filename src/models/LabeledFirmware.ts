/* tslint:disable */
/* eslint-disable */
/**
 * The Span API
 * API for device, collection, output and firmware management
 *
 * The version of the OpenAPI document: 5.0.4 pettish-alleen
 * Contact: dev@lab5e.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * A firmware image that is tagged with a label.
 * @export
 * @interface LabeledFirmware
 */
export interface LabeledFirmware {
    /**
     * 
     * @type {string}
     * @memberof LabeledFirmware
     */
    collectionId?: string;
    /**
     * 
     * @type {string}
     * @memberof LabeledFirmware
     */
    imageId?: string;
    /**
     * 
     * @type {string}
     * @memberof LabeledFirmware
     */
    imageRef?: string;
    /**
     * 
     * @type {string}
     * @memberof LabeledFirmware
     */
    version?: string;
    /**
     * 
     * @type {string}
     * @memberof LabeledFirmware
     */
    label?: string;
    /**
     * 
     * @type {string}
     * @memberof LabeledFirmware
     */
    fileName?: string;
    /**
     * 
     * @type {string}
     * @memberof LabeledFirmware
     */
    length?: string;
    /**
     * 
     * @type {string}
     * @memberof LabeledFirmware
     */
    sha256?: string;
    /**
     * 
     * @type {string}
     * @memberof LabeledFirmware
     */
    createdAt?: string;
}

/**
 * Check if a given object implements the LabeledFirmware interface.
 */
export function instanceOfLabeledFirmware(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function LabeledFirmwareFromJSON(json: any): LabeledFirmware {
    return LabeledFirmwareFromJSONTyped(json, false);
}

export function LabeledFirmwareFromJSONTyped(json: any, ignoreDiscriminator: boolean): LabeledFirmware {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'collectionId': !exists(json, 'collectionId') ? undefined : json['collectionId'],
        'imageId': !exists(json, 'imageId') ? undefined : json['imageId'],
        'imageRef': !exists(json, 'imageRef') ? undefined : json['imageRef'],
        'version': !exists(json, 'version') ? undefined : json['version'],
        'label': !exists(json, 'label') ? undefined : json['label'],
        'fileName': !exists(json, 'fileName') ? undefined : json['fileName'],
        'length': !exists(json, 'length') ? undefined : json['length'],
        'sha256': !exists(json, 'sha256') ? undefined : json['sha256'],
        'createdAt': !exists(json, 'createdAt') ? undefined : json['createdAt'],
    };
}

export function LabeledFirmwareToJSON(value?: LabeledFirmware | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'collectionId': value.collectionId,
        'imageId': value.imageId,
        'imageRef': value.imageRef,
        'version': value.version,
        'label': value.label,
        'fileName': value.fileName,
        'length': value.length,
        'sha256': value.sha256,
        'createdAt': value.createdAt,
    };
}

